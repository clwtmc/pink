var BOOTMAGIC = "BOOT";

var MMIO = 0xfffffffff8000000;
var FB = 0xfffffffffc000000;
var INFO = 0xffffffffffe00000;
var ENV = 0xffffffffffe01000;
var CORE = 0xffffffffffe02000;

var PROTO_MINIMAL = 0;
var PROTO_STATIC  = 1;
var PROTO_DYNAMIC = 2;


var PROTO_BIGENDIAN = 0x80;

func ldr_bios(): uint64 {
    return (0<<2);
}

func ldr_uefi(): uint64 {
    return (1<<2);
}

func ldr_rpi(): uint64 {
    return (2<<2);
}

func ldr_coreboot(): uint64 {
    return (3<<2);
}

var FB_ARGB = 0;
var FB_RGBA = 1;
var FB_ABGR = 2;
var FB_BGRA = 3;

struct MemoryMapEntry {
    ptr: uint64;
    sz: uint64;
}

func mmap_sz(a: MemoryMapEntry): usize {
    return ((a).sz & 0xFFFFFFFFFFFFFFF0);
}

func mmap_ptr(a: MemoryMapEntry): usize {
    return ((a).ptr);
}

func mmap_type(a: MemoryMapEntry): usize {
    return ((a).sz & 0xF);
}

func mmap_is_free(a: MemoryMapEntry): bool {
    return (((a).sz)==1);
}

var MMAP_USED = 0;
var MMAP_FREE = 1;
var MMAP_ACPI = 2;
var MMAP_MMIO = 3;


var INITRD_MAX = 16;

struct X86_64 {
    acpi_ptr: uint64;
    smbi_ptr: uint64;
    efi_ptr: uint64;
    mp_ptr: uint64;
    not_used0: uint64;
    not_used1: uint64;
    not_used2: uint64;
    not_used3: uint64;
}

struct AArch64 {
    acpi_ptr: uint64;
    mmio_ptr: uint64;
    efi_ptr: uint64;
    not_used0: uint64;
    not_used1: uint64;
    not_used2: uint64;
    not_used3: uint64;
    not_used4: uint64;
}

union Arch {
    x86_64: X86_64;
    aarch64: AArch64;
}

struct BOOTBOOT {
    magic: uint8[4];
    sz: uint32;
    protocol: uint8;
    fb_type: uint8;
    numcores: uint16;
    bspid: uint16;
    tz: int16;
    datetime: uint8[8];
    initrd_ptr: uint64;
    initrd_sz: uint64;
    fb_ptr: uint64;
    fb_sz: uint32;
    fb_width: uint32;
    fb_height: uint32;
    fb_scanline: uint32;

    arch: Arch;

    mmap: MemoryMapEntry;
}

